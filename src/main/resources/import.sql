drop table if exists candidate cascade;
drop table if exists election cascade;
drop table if exists politician cascade;

drop sequence if exists candidate_SEQ;
drop sequence if exists election_SEQ;
drop sequence if exists politician_SEQ;

create sequence candidate_SEQ start with 1 increment by 50;
create sequence election_SEQ start with 1 increment by 50;
create sequence politician_SEQ start with 1 increment by 50;

create table politician (
    id bigint not null,
    full_name varchar(255),
    name varchar(255),
    photo varchar(255),
    primary key (id)
);

create table election (
    id bigint not null,
    municipality varchar(255) check (municipality in ('SAO_PAULO')),
    position varchar(255) check (position in ('PREFEITO', 'VEREADOR')),
    uf varchar(255) check (uf in ('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MG', 'MS', 'MT',
                                 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN', 'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO')),
    election_date date,
    primary key (id)
);

create table candidate (
    id bigint not null,
    politician_id bigint not null,
    election_id bigint not null,
    votes integer not null,
    number integer not null,
    result varchar(255) check (result in ('SECOND_TURN', 'NOT_ELECTED', 'ELECTED', 'ELECTED_BY_AVERAGE', 'ELECTED_BY_QP')),
    primary key (id),
    constraint fk_candidate_politician foreign key (politician_id) references politician(id),
    constraint fk_candidate_election foreign key (election_id) references election(id),
    constraint unique_candidate_per_election unique (politician_id, election_id)
);

-- Inserir políticos
INSERT INTO politician (id, full_name, name, photo) VALUES
(1, 'RICARDO NUNES', 'RICARDO NUNES', 'https://example.com/photos/ricardo.jpg'),
(2, 'GUILHERME BOULOS', 'GUILHERME BOULOS', 'https://example.com/photos/guilherme.jpg'),
(3, 'PABLO MARÇAL', 'PABLO MARÇAL', 'https://example.com/photos/marta.jpg'),
(4, 'TABATA AMARAL', 'TABATA AMARAL', 'https://example.com/photos/tabata.jpg'),
(5, 'DATENA', 'DATENA', 'https://example.com/photos/arthur.jpg'),
(6, 'MARINA HELENA', 'MARINA HELENA', 'https://example.com/photos/kim.jpg'),
(7, 'RICARDO SENESE', 'RICARDO SENESE', 'https://example.com/photos/celso.jpg'),
(8, 'ALTINO PRAZERES', 'ALTINO PRAZERES', 'https://example.com/photos/andrea.jpg'),
(9, 'JOÃO PIMENTA', 'JOÃO PIMENTA', 'https://example.com/photos/vera.jpg'),
(10, 'BEBETO HADDAD', 'BEBETO HADDAD', 'https://example.com/photos/jilmar.jpg'),
(11, 'LUCAS PAVANATO', 'LUCAS PAVANATO', 'https://example.com/photos/lucas.jpg'),
(12, 'ANA CAROLINA OLIVEIRA', 'ANA CAROLINA OLIVEIRA', 'https://example.com/photos/ana.jpg'),
(13, 'DR. MURILLO LIMA', 'DR. MURILLO LIMA', 'https://example.com/photos/murillo.jpg'),
(14, 'SARGENTO NANTES', 'SARGENTO NANTES', 'https://example.com/photos/nantes.jpg'),
(15, 'AMANDA PASCHOAL', 'AMANDA PASCHOAL', 'https://example.com/photos/amanda.jpg'),
(16, 'RUBINHO NUNES', 'RUBINHO NUNES', 'https://example.com/photos/rubinho.jpg'),
(17, 'LUNA ZARATTINI', 'LUNA ZARATTINI', 'https://example.com/photos/luna.jpg'),
(18, 'LUANA ALVES', 'LUANA ALVES', 'https://example.com/photos/luana.jpg'),
(19, 'DRA SANDRA TADEU', 'DRA SANDRA TADEU', 'https://example.com/photos/sandra_tadeu.jpg'),
(20, 'PASTORA SANDRA ALVES', 'PASTORA SANDRA ALVES', 'https://example.com/photos/sandra_alves.jpg'),
(21, 'SILVÃO LEITE', 'SILVÃO LEITE', 'https://example.com/photos/silvao.jpg'),
(22, 'ISAC FÉLIX', 'ISAC FÉLIX', 'https://example.com/photos/isac.jpg'),
(23, 'ZOE MARTINEZ', 'ZOE MARTINEZ', 'https://example.com/photos/zoe.jpg'),
(24, 'RODRIGO GOULART', 'RODRIGO GOULART', 'https://example.com/photos/rodrigo.jpg'),
(25, 'DANILO DO POSTO DE SAÚDE', 'DANILO DO POSTO DE SAÚDE', 'https://example.com/photos/danilo.jpg'),
(26, 'GABRIEL ABREU', 'GABRIEL ABREU', 'https://example.com/photos/gabriel.jpg'),
(27, 'EDIR SALES', 'EDIR SALES', 'https://example.com/photos/edir.jpg'),
(28, 'ALESSANDRO GUEDES', 'ALESSANDRO GUEDES', 'https://example.com/photos/alessandro.jpg'),
(29, 'CELSO GIANNAZI', 'CELSO GIANNAZI', 'https://example.com/photos/giannazi.jpg'),
(30, 'CRIS MONTEIRO', 'CRIS MONTEIRO', 'https://example.com/photos/cris.jpg'),
(31, 'SILVINHO', 'SILVINHO', 'https://example.com/photos/silvinho.jpg'),
(32, 'THAMMY MIRANDA', 'THAMMY MIRANDA', 'https://example.com/photos/thammy.jpg'),
(33, 'NABIL BONDUKI', 'NABIL BONDUKI', 'https://example.com/photos/nabil.jpg'),
(34, 'JANAINA PASCHOAL', 'JANAINA PASCHOAL', 'https://example.com/photos/janaina.jpg'),
(35, 'FABIO RIVA', 'FABIO RIVA', 'https://example.com/photos/fabio.jpg'),
(36, 'MAJOR PALUMBO', 'MAJOR PALUMBO', 'https://example.com/photos/palumbo.jpg'),
(37, 'RUTE COSTA', 'RUTE COSTA', 'https://example.com/photos/rute.jpg'),
(38, 'SIDNEY CRUZ', 'SIDNEY CRUZ', 'https://example.com/photos/sidney.jpg'),
(39, 'GEORGE HATO', 'GEORGE HATO', 'https://example.com/photos/george.jpg'),
(40, 'SANSÃO PEREIRA', 'SANSÃO PEREIRA', 'https://example.com/photos/sansao.jpg'),
(41, 'ANDRÉ SANTOS', 'ANDRÉ SANTOS', 'https://example.com/photos/andre.jpg'),
(42, 'HÉLIO RODRIGUES', 'HÉLIO RODRIGUES', 'https://example.com/photos/helio.jpg'),
(43, 'AMANDA VETTORAZZO', 'AMANDA VETTORAZZO', 'https://example.com/photos/amanda_v.jpg'),
(44, 'MARCELO MESSIAS', 'MARCELO MESSIAS', 'https://example.com/photos/marcelo.jpg'),
(45, 'MARINA BRAGANTE', 'MARINA BRAGANTE', 'https://example.com/photos/marina_b.jpg'),
(46, 'TRIPOLI', 'TRIPOLI', 'https://example.com/photos/tripoli.jpg'),
(47, 'SIMONE GANEM', 'SIMONE GANEM', 'https://example.com/photos/simone.jpg'),
(48, 'SANDRA SANTANA', 'SANDRA SANTANA', 'https://example.com/photos/sandra_s.jpg'),
(49, 'JOÃO JORGE', 'JOÃO JORGE', 'https://example.com/photos/joao_jorge.jpg'),
(50, 'ELY TERUEL', 'ELY TERUEL', 'https://example.com/photos/ely.jpg'),
(51, 'PROFESSOR TONINHO VESPOLI', 'PROFESSOR TONINHO VESPOLI', 'https://example.com/photos/toninho.jpg'),
(52, 'SILVIA DA BANCADA FEMINISTA', 'SILVIA DA BANCADA FEMINISTA', 'https://example.com/photos/silvia.jpg'),
(53, 'SONAIRA FERNANDES', 'SONAIRA FERNANDES', 'https://example.com/photos/sonaira.jpg'),
(54, 'DR. MILTON FERREIRA', 'DR. MILTON FERREIRA', 'https://example.com/photos/milton.jpg'),
(55, 'JOÃO ANANIAS', 'JOÃO ANANIAS', 'https://example.com/photos/ananias.jpg'),
(56, 'KENJI PALUMBO', 'KENJI PALUMBO', 'https://example.com/photos/kenji.jpg'),
(57, 'RICARDO TEIXEIRA', 'RICARDO TEIXEIRA', 'https://example.com/photos/ricardo_t.jpg'),
(58, 'JAIR TATTO', 'JAIR TATTO', 'https://example.com/photos/jair.jpg'),
(59, 'ELISEU GABRIEL', 'ELISEU GABRIEL', 'https://example.com/photos/eliseu.jpg'),
(60, 'DHEISON', 'DHEISON', 'https://example.com/photos/dheison.jpg'),
(61, 'SENIVAL MOURA', 'SENIVAL MOURA', 'https://example.com/photos/senival.jpg'),
(62, 'RENATA FALZONI', 'RENATA FALZONI', 'https://example.com/photos/renata.jpg'),
(63, 'KEIT LIMA', 'KEIT LIMA', 'https://example.com/photos/keit.jpg'),
(64, 'ADRILLES JORGE', 'ADRILLES JORGE', 'https://example.com/photos/adrilles.jpg'),
(65, 'GILBERTO NASCIMENTO', 'GILBERTO NASCIMENTO', 'https://example.com/photos/gilberto.jpg');

-- Inserir eleições
INSERT INTO election (id, municipality, position, uf, election_date) VALUES
(1, 'SAO_PAULO', 'PREFEITO', 'SP', '2024-10-06'),
(2, 'SAO_PAULO', 'PREFEITO', 'SP', '2024-10-27'),
(3, 'SAO_PAULO', 'VEREADOR', 'SP', '2024-10-06');

-- Inserir candidatos
INSERT INTO candidate (id, politician_id, election_id, votes, number, result) VALUES
(1, 1, 1, 3393110, 15, 'SECOND_TURN'),
(2, 2, 1, 2323901, 50, 'SECOND_TURN'),
(3, 3, 1, 1719274, 28, 'NOT_ELECTED'),
(4, 4, 1, 605552, 40, 'NOT_ELECTED'),
(5, 5, 1, 112344, 45, 'NOT_ELECTED'),
(6, 6, 1, 84212, 30, 'NOT_ELECTED'),
(7, 7, 1, 5593, 80, 'NOT_ELECTED'),
(8, 8, 1, 3017, 16, 'NOT_ELECTED'),
(9, 9, 1, 960, 29, 'NOT_ELECTED'),
(10, 10, 1, 833, 27, 'NOT_ELECTED'),
(11, 1, 2, 1801139, 15, 'ELECTED'),
(12, 2, 2, 1776127, 50, 'NOT_ELECTED'),
-- Vereadores eleitos
(13, 11, 3, 161386, 22022, 'ELECTED_BY_QP'),
(14, 12, 3, 129563, 20000, 'ELECTED_BY_QP'),
(15, 13, 3, 113820, 11111, 'ELECTED_BY_QP'),
(16, 14, 3, 112484, 11190, 'ELECTED_BY_QP'),
(17, 15, 3, 108654, 50700, 'ELECTED_BY_QP'),
(18, 16, 3, 101549, 44555, 'ELECTED_BY_QP'),
(19, 17, 3, 100921, 13131, 'ELECTED_BY_QP'),
(20, 18, 3, 83262, 50500, 'ELECTED_BY_QP'),
(21, 19, 3, 74511, 22555, 'ELECTED_BY_QP'),
(22, 20, 3, 74192, 44000, 'ELECTED_BY_QP'),
(23, 21, 3, 63988, 44111, 'ELECTED_BY_QP'),
(24, 22, 3, 62275, 22678, 'ELECTED_BY_QP'),
(25, 23, 3, 60272, 22522, 'ELECTED_BY_QP'),
(26, 24, 3, 58715, 55800, 'ELECTED_BY_QP'),
(27, 25, 3, 58676, 20123, 'ELECTED_BY_QP'),
(28, 26, 3, 58581, 20200, 'ELECTED_BY_QP'),
(29, 27, 3, 58190, 55123, 'ELECTED_BY_QP'),
(30, 28, 3, 58183, 13699, 'ELECTED_BY_QP'),
(31, 29, 3, 57789, 50789, 'ELECTED_BY_QP'),
(32, 30, 3, 56904, 30000, 'ELECTED_BY_QP'),
(33, 31, 3, 53453, 44250, 'ELECTED_BY_QP'),
(34, 32, 3, 50234, 55000, 'ELECTED_BY_AVERAGE'),
(35, 33, 3, 49540, 13633, 'ELECTED_BY_QP'),
(36, 34, 3, 48893, 11500, 'ELECTED_BY_QP'),
(37, 35, 3, 44627, 15780, 'ELECTED_BY_QP'),
(38, 36, 3, 43455, 11000, 'ELECTED_BY_AVERAGE'),
(39, 37, 3, 43090, 22000, 'ELECTED_BY_QP'),
(40, 38, 3, 42988, 15002, 'ELECTED_BY_QP'),
(41, 39, 3, 42837, 15622, 'ELECTED_BY_QP'),
(42, 40, 3, 42229, 10300, 'ELECTED_BY_QP'),
(43, 41, 3, 41379, 10456, 'ELECTED_BY_AVERAGE'),
(44, 42, 3, 40753, 13900, 'ELECTED_BY_QP'),
(45, 43, 3, 40144, 44333, 'ELECTED_BY_QP'),
(46, 44, 3, 40079, 15000, 'ELECTED_BY_QP'),
(47, 45, 3, 39147, 18000, 'ELECTED_BY_QP'),
(48, 46, 3, 39039, 43666, 'ELECTED_BY_QP'),
(49, 47, 3, 38540, 20010, 'ELECTED_BY_QP'),
(50, 48, 3, 38326, 15456, 'ELECTED_BY_QP'),
(51, 49, 3, 36296, 15015, 'ELECTED_BY_QP'),
(52, 50, 3, 35622, 15151, 'ELECTED_BY_AVERAGE'),
(53, 51, 3, 34735, 50650, 'ELECTED_BY_QP'),
(54, 52, 3, 34537, 50900, 'ELECTED_BY_QP'),
(55, 53, 3, 33957, 22222, 'ELECTED_BY_QP'),
(56, 54, 3, 33493, 20500, 'ELECTED_BY_QP'),
(57, 55, 3, 33225, 13644, 'ELECTED_BY_QP'),
(58, 56, 3, 32495, 20100, 'ELECTED_BY_AVERAGE'),
(59, 57, 3, 31566, 44156, 'ELECTED_BY_QP'),
(60, 58, 3, 30905, 13114, 'ELECTED_BY_QP'),
(61, 59, 3, 30706, 40123, 'ELECTED_BY_QP'),
(62, 60, 3, 30575, 13110, 'ELECTED_BY_QP'),
(63, 61, 3, 30480, 13800, 'ELECTED_BY_AVERAGE'),
(64, 62, 3, 30206, 40400, 'ELECTED_BY_QP'),
(65, 63, 3, 27769, 50300, 'ELECTED_BY_AVERAGE'),
(66, 64, 3, 25038, 44011, 'ELECTED_BY_AVERAGE'),
(67, 65, 3, 22306, 22200, 'ELECTED_BY_AVERAGE');